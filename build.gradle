plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
//	id 'war'
//	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'	//Querydsl 추가
}

group = 'com.jongtix'
version = '0.0.1-SNAPSHOT' + new Date().format("yyyyMMddHHmmss")
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'	//JPA 의존성 추가
	compile 'com.h2database:h2'	//h2 의존성 추가
	compile 'org.mariadb.jdbc:mariadb-java-client'	//MariaDB 의존성 추가

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'	//Thymeleaf 의존성 추가
	compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time'	//Thymeleaf LocalDateTime, LocalDate 유틸 의존성 추가

	//Querydsl 추가 -start
	implementation 'com.querydsl:querydsl-jpa'	//Querydsl 추가
	implementation 'com.querydsl:querydsl-core'

	annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa") // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor("jakarta.persistence:jakarta.persistence-api") // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
	annotationProcessor("jakarta.annotation:jakarta.annotation-api") // java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 대응
	//Querydsl 추가 -end

	compile 'org.thymeleaf:thymeleaf'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

//Querydsl 추가 -start
//출처: https://jojoldu.tistory.com/372
def generated='src/main/generated'
sourceSets {
	main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}
//Querydsl 추가 -end